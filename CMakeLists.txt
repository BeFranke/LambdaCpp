cmake_minimum_required(VERSION 3.16)
project(lambda)

set(CMAKE_CXX_STANDARD 17)

### START UNIT TEST INSERTION
# testing setup from https://github.com/google/googletest/tree/master/googletest#incorporating-into-an-existing-cmake-project
# Download and unpack googletest at configure time
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
        RESULT_VARIABLE result
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
    message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
        RESULT_VARIABLE result
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
    message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

# Prevent overriding the parent project's compiler/linker
# settings on Windows
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
        ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
        EXCLUDE_FROM_ALL)

# The gtest/gtest_main targets carry header search path
# dependencies automatically when using CMake 2.8.11 or
# later. Otherwise we have to add them here ourselves.
if (CMAKE_VERSION VERSION_LESS 2.8.11)
    include_directories("${gtest_SOURCE_DIR}/include")
endif()

# Now simply link against gtest or gtest_main as needed.
# lambda-syntax.hpp test
add_executable(lambda-syntax test/lambda-syntax.cpp headers/lambda-exceptions.hpp)
target_link_libraries(lambda-syntax gtest_main)
add_test(NAME syntax_test COMMAND lambda-syntax)
# lambda-reduction.hpp test
add_executable(lambda-reduction test/lambda-reduction.cpp headers/lambda-exceptions.hpp headers/utils.hpp)
target_link_libraries(lambda-reduction gtest_main)
add_test(NAME reduction_test COMMAND lambda-reduction)
### END UNIT TEST INSERTION
